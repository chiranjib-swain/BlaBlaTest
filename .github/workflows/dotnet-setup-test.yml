name: "dotnet-setup-test"
on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#   schedule:
#     - cron: '41 10 * * 4'  # At 10:41 every Thursday
  workflow_dispatch:  # Allows manual trigger

jobs:
  analyze:
    name: Analyze
    runs-on: [ ubuntu-latest ]
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
     
    # List directory contents to verify the presence of the solution file
    - name: List directory contents
      run: ls -R

    # Initializes the CodeQL tools for scanning
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Query configuration
        queries: security-extended,security-and-quality
        # Configure CodeQL analysis options
        config: |
          # Configuration for all languages
          paths:
            - src
          paths-ignore:
            - '**/obj/**'
            - '**/bin/**'
            - '**/tests/**'
            - '**/*.Test*/**'
            - '**/*.Tests*/**'
         
          # C# specific configuration
          csharp:
            # Enable additional security analysis for database operations
            database-scrutiny: high
                 
          # Don't analyze test code
          query-filters:
            - exclude:
                tags contain: test  
    # - name: Create global.json
    #   run: |
    #     echo '{
    #       "sdk": {
    #         "version": "9.0.0",
    #         "rollForward": "latestFeature"
    #       }
    #     }' > global.json
    # Standard build using dotnet CLI
    - name: Setup .NET
      uses: actions/setup-dotnet@v4      
      with:        
        dotnet-version: '9.0.x'
        global-json-file: "./global.json"

    - name: Build with dotnet
      run: |
        ls -la  # List contents of the root directory to verify presence of solution file
        dotnet restore BlaBla.Api.sln
        dotnet build BlaBla.Api.sln --configuration Debug --no-restore
     
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
